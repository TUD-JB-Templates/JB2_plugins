name: Deploy Multi-Language MyST Books üåç

on:
  push:
    branches:
      - main
      - language-*
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

env:
  PRIMARY_BRANCH: main
  BEHAVIOR_PRIMARY: redirect  # redirect | copy | move
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  # 1Ô∏è‚É£ Build each branch (main or language-xx)
  build:
    runs-on: ubuntu-latest
    outputs:
      lang: ${{ steps.lang.outputs.lang }}
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - name: Detect language code
        id: lang
        run: |
          branch="${GITHUB_REF_NAME}"
          if [[ "$branch" == "main" ]]; then
            lang="en"
          elif [[ "$branch" =~ ^language-([a-z]+)$ ]]; then
            lang="${BASH_REMATCH[1]}"
          else
            echo "‚ö†Ô∏è Unknown branch naming format, skipping build."
            exit 0
          fi
          echo "üìò Branch: $branch"
          echo "üåê Language code: $lang"
          echo "lang=$lang" >> $GITHUB_OUTPUT
          echo "LANGUAGE_CODE=$lang" >> $GITHUB_ENV

      - name: Install MyST Markdown
        run: |
          npm install -g mystmd
          myst --version

      - name: Build MyST Book
        run: |
          echo "üõ†Ô∏è Building MyST site for language: ${LANGUAGE_CODE}"
          myst build --html
          echo "‚úÖ Build complete for ${LANGUAGE_CODE}"
          ls -R _build/html || echo "‚ö†Ô∏è No HTML output found"

      - name: Upload artifact for this language
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.lang.outputs.lang }}
          path: _build/html

  # 2Ô∏è‚É£ Deploy all detected builds to GitHub Pages
  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Checkout (create gh-pages if missing)
        run: |
          git init
          git remote add origin "https://github.com/${{ github.repository }}.git"
          git fetch origin || true
          if git show-ref --verify --quiet refs/remotes/origin/gh-pages; then
            echo "‚úÖ Found existing gh-pages branch"
            git checkout gh-pages
          else
            echo "üöÄ No gh-pages branch found, creating new one..."
            git checkout --orphan gh-pages
            git reset --hard
          fi

      - name: Prepare deployment folder
        run: mkdir -p final site

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: final

      - name: Organize language folders
        id: organize
        run: |
          cd final
          BASE_URL="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"
          echo "## üåç Languages Found" >> $GITHUB_STEP_SUMMARY
          echo "| Language | Folder | URL |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------|---------|-----|" >> $GITHUB_STEP_SUMMARY
          for dir in */; do
            lang="${dir%/}"
            mkdir -p "../site/${lang}"
            cp -r "${dir}/." "../site/${lang}/"
            echo "| ${lang} | /${lang}/ | ${BASE_URL}/${lang}/ |" >> $GITHUB_STEP_SUMMARY
          done
          cd ..

      - name: Ensure at least English is present
        run: |
          if [ ! -d "site/en" ]; then
            echo "‚ùå No English folder found. Did you run this from the 'main' branch?"
            exit 1
          fi

      - name: Handle root redirect or copy
        run: |
          cd site
          if [ "${BEHAVIOR_PRIMARY}" = "redirect" ]; then
            echo '<meta http-equiv="refresh" content="0; url=en/">' > index.html
            echo "üåç Root will redirect to /en/"
          elif [ "${BEHAVIOR_PRIMARY}" = "copy" ]; then
            cp -r en/* .
            echo "üåç Root will copy /en/"
          elif [ "${BEHAVIOR_PRIMARY}" = "move" ]; then
            mv en/* .
            rm -rf en
            echo "üåç Root will move /en/"
          fi
          cd ..

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Deployment Summary
        run: |
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## üöÄ Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "Repository: **${{ github.repository }}**" >> $GITHUB_STEP_SUMMARY
          echo "Deployed to: [${{ steps.deployment.outputs.page_url }}](${{ steps.deployment.outputs.page_url }})" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üß≠ Root behavior"
          echo "- Mode: **${BEHAVIOR_PRIMARY}**"
          echo "- Root URL redirects to [${{ steps.deployment.outputs.page_url }}/en/]" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ‚úÖ Languages published:"
          echo "- English ‚Üí [${{ steps.deployment.outputs.page_url }}/en/]" >> $GITHUB_STEP_SUMMARY
          echo "- Additional languages (if present) listed above üëÜ" >> $GITHUB_STEP_SUMMARY
